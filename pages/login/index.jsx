import { Button, Space } from "antd";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { Input } from "antd";
import {
  EyeInvisibleOutlined,
  EyeTwoTone,
  UserOutlined,
  KeyOutlined,
} from "@ant-design/icons";
import styled from "styled-components";
import { useLocalStorageState } from "ahooks";
import { useState } from "react";
import { useRouter } from "next/router";
import { message } from "antd";
import axios from "axios";
import { useContext } from "react";
import loginStyle from "/styles/login.module.css";
import ModalButton from "../../components/ModalButton";
export default function Login() {
  const [inputUserName, setInputUserName] = useState("");
  const [inputPassword, setInputPassword] = useState("");
  const router = useRouter();
  const handleLogin = () => {
    axios
      .post("/api/auth/loginuser", {
        userName: inputUserName,
        password: inputPassword,
      })
      .then((res) => {
        console.log(res, "res");
        const { data } = res;
        if (data) {
          message.success("登录成功,欢迎" + data.userName);
          router.push("/workbench/home");
        } else {
          message.error("账号或密码错误,请重新输入");
        }
      })
      .catch(function (error) {
        if (error.response.data?.type === "test") {
          message.success(
            "测试账户" + error.response.data.userName + "登录成功"
          );
          router.push("/workbench/home");
        } else {
          console.log(error);
          message.error("服务器出现问题,请查看控制台");
        }
      });
  };
  const handleOnKeyDown = (e) => {
    if (e.key === "Enter") {
      handleLogin();
    }
  };
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={loginStyle.loginBackground}>
        <div
          style={{
            height: "100vh",
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
          }}
        >
          <Space direction="vertical">
            <h1 style={{ color: "black" }}>Login</h1>
            <Input
              size="large"
              placeholder="userName"
              prefix={<UserOutlined />}
              value={inputUserName}
              onChange={(e) => {
                setInputUserName(e.target.value);
              }}
            />
            <Input.Password
              size="large"
              placeholder="input password"
              iconRender={(visible) =>
                visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />
              }
              prefix={<KeyOutlined />}
              value={inputPassword}
              onChange={(e) => {
                setInputPassword(e.target.value);
              }}
              onKeyDown={handleOnKeyDown}
            />
            <div
              style={{
                display: "flex",
                justifyContent: "space-between",
                width: "90%",
                margin: "auto",
              }}
            >
              <Button onClick={handleLogin}>登录</Button>
              <ModalButton buttonName="注册" ModalTitle="注册账户" />
            </div>
          </Space>
        </div>
      </div>
    </>
  );
}
